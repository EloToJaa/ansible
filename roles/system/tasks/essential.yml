- name: Update and upgrade apt packages
  apt:
    upgrade: yes
    autoremove: yes
    update_cache: yes
  when: "'{{ ansible_distribution }}' != 'Fedora'"
  become: true

- name: Upgrade all dnf packages
  dnf:
    name: "*"
    state: latest
  when: "'{{ ansible_distribution }}' == 'Fedora'"
  become: true

- name: Install unattended upgrades package
  package:
    name: unattended-upgrades
    state: present
  when: "'{{ ansible_distribution }}' != 'Fedora'"
  become: true

- name: Copy unattended-upgrades configuration files in place
  template:
    src: "{{ item }}.j2"
    dest: "/etc/apt/apt.conf.d/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - 10periodic
    - 50unattended-upgrades
  when: "'{{ ansible_distribution }}' != 'Fedora'"
  become: true

- name: Update apt and install software
  package:
    update_cache: yes
    name: "{{ apt_software }}"
    state: present
  when: "'{{ ansible_distribution }}' != 'Fedora'"
  become: true

- name: Update dnf and install software
  package:
    update_cache: yes
    name: "{{ dnf_software }}"
    state: present
  when: "'{{ ansible_distribution }}' == 'Fedora'"
  become: true

- name: Install pip software
  pip:
    name: "{{ pip_software }}"
    state: latest

- name: Install pipx software
  community.general.pipx:
    name: "{{ item }}"
    state: latest
  with_items: "{{ pipx_software }}"

- name: Generate the locale
  locale_gen:
    name: "{{ locale }}"
    state: present
  become: true

- name: Update SSH configuration to change dns
  register: ssh_config
  lineinfile:
    dest: "/etc/systemd/resolved.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    mode: 0644
  with_items:
    - regexp: "^#?DNS="
      line: "DNS=192.168.0.40"
    - regexp: "^#?FallbackDNS="
      line: "FallbackDNS=1.1.1.1"
    - regexp: "^#?DNSStubListener="
      line: "DNSStubListener=no"
  when: version == "server"
  become: true

- name: Populate service facts
  service_facts:

- name: Stop ssh
  service:
    name: ssh
    state: stopped
  when: "'ssh.service' in ansible_facts.services"
  become: true

- name: Start and enable ssh
  service:
    name: ssh
    state: started
    enabled: yes
  when: "'ssh.service' in ansible_facts.services"
  become: true

- name: Stop systemd-resolved
  service:
    name: systemd-resolved
    state: stopped
  when: "'systemd-resolved.service' in ansible_facts.services"
  become: true

- name: Start and enable systemd-resolved
  service:
    name: systemd-resolved
    state: started
    enabled: yes
  when: "'systemd-resolved.service' in ansible_facts.services"
  become: true